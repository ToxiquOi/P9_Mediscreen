name: SonarCloud
on:
  push:
    branches:
      - main
      - release/*
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    services:
      mediscreen-userdb-db:
        image: mysql:8.0.27
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: userdb-test
          MYSQL_USER: admin
          MYSQL_PASSWORD: admin
        ports:
          - "3306:3306"
      mediscreen-doctordb-db:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
        ports:
          - "27017:27017"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DB_SERVER: 'localhost'
        run: ./gradlew build sonar -Dsonar.projectKey=ToxiquOi_P9_Mediscreen -Dsonar.organization=toxiquoi -Dsonar.exclusion=./mediscreen-ui/**
      - name: Deploy artifact
        uses: actions/upload-artifact@v3
        with:
          name: MediscreenArtifacts
          path: |
            */build/libs/*-*-SNAPSHOT.jar
            */build/reports/
            */build/jacocoHtml/
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}