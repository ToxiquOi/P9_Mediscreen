# Use root/example as user/password credentials
version: '3.1'

services:
  mediscreen-doctordb-db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017"

  mediscreen-doctordb-app:
    build:
      context: ../doctordb/
      dockerfile: DockerFile
    container_name: mediscreen-doctordb-app
    ports:
      - "8082:8082"
    environment:
      - DB_SERVER=mediscreen-doctordb-db
      - SECRET=root
    links:
      - mediscreen-doctordb-db

  mediscreen-userdb-db:
    image: mysql:8.0.27
    container_name: mediscreen-userdb-db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: userdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"

  mediscreen-userdb-app:
    build:
      context: ../userdb/
      dockerfile: DockerFile
    container_name: mediscreen-userdb-app
    ports:
      - "8081:8081"
    environment:
      - DB_SERVER=mediscreen-userdb-db
      - SECRET=root
    links:
      - mediscreen-userdb-db

  mediscreen-ui-app:
    build:
      context: ../mediscreen-ui/
      dockerfile: DockerFile
    container_name: mediscreen-ui-app
    ports:
      - "8080:8080"
    environment:
      - DOCTOR_SERVICE=mediscreen-doctordb-app
      - PATIENT_SERVICE=mediscreen-userdb-app
      - ANALYTICS_SERVICE=mediscreen-analytics-app
    links:
      - mediscreen-doctordb-app
      - mediscreen-userdb-app
      - mediscreen-analytics-app

  mediscreen-analytics-app:
    build:
      context: ../analytics
      dockerfile: DockerFile
    container_name: mediscreen-analytics-app
    ports:
      - "8080:8080"
    environment:
      - DOCTOR_SERVICE=mediscreen-doctordb-app
      - PATIENT_SERVICE=mediscreen-userdb-app
    links:
      - mediscreen-doctordb-app
      - mediscreen-userdb-app